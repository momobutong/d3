<!DOCTYPE html>
<html>
<head>
	<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
	<title>d3 柱状图</title>
	<style type="text/css">
	.axis path,
	.axis line{
		fill: none;
		stroke: black;
		shape-rendering: crispEdges;
	}
	.axis text {
		font-family: sans-serif;
		font-size: 12px;
	}
	.MyText {
		fill: white;
		text-anchor: middle;
	}
	</style>
</head>
<body>
	
<script type="text/javascript">
	var body = d3.select("body");
	var svg = body.append("svg");
	var width = 300, height = 200;
	//画布内边距
	var padding = {top: 20, right: 30, bottom: 20, left: 30};
	svg.attr("width", width).attr("height", height);

	var dataset = [10, 70, 20, 30, 40, 60];
	var rectPadding = 4;
	//x y 比例尺 
	var xScale = d3.scale.ordinal().domain(d3.range(dataset.length)).rangeRoundBands([0, width-padding.left-padding.right]);
	var yScale = d3.scale.linear().domain([0, d3.max(dataset)]).range([height-padding.top-padding.bottom, 0]);
	// x y 坐标轴
	var xAxis = d3.svg.axis().scale(xScale).orient("bottom");
	var yAxis = d3.svg.axis().scale(yScale).orient("left");

	var rects = svg.selectAll("rect").data(dataset).enter().append("rect").attr("class", "MyRect").attr("transform", "translate("+padding.left+", "+padding.top+")").attr("x", function(d, i){
		return xScale(i)+rectPadding/2;
	}).attr("y", function(d, i){
		return yScale(d);
	}).attr("width", function(d, i){
		return xScale.rangeBand()-rectPadding;
	}).attr("height", function(d, i){
		return height-padding.top-padding.bottom-yScale(d);
	}).on("mouseover", function(){
		d3.select(this).attr("fill", "steelblue");
	}).on("mouseout", function(){
		d3.select(this).transition().duration(1200).attr("fill", "yellowgreen");
	});

	var texts = svg.selectAll("text").data(dataset).enter().append("text").attr("class", "MyText").attr("transform", "translate("+padding.left+", "+padding.top+")").attr("x", function(d, i){
		return xScale(i)+rectPadding/2;
	}).attr("y", function(d, i){
		var min = yScale.domain()[0];
		return yScale(min);
	}).transition().duration(2000).delay(function(d, i){
		return 200*i;
	}).ease("bounce").attr("y", function(d, i){
		return yScale(d);
	}).attr("dx", function(){
		return (xScale.rangeBand()-rectPadding)/2;
	}).attr("dy", 15).text(function(d, i){
		return d;
	});

	svg.append("g").attr("class", "axis").attr("transform", "translate("+padding.left+", "+(height-padding.top)+")").call(xAxis);
	svg.append("g").attr("class", "axis").attr("transform", "translate("+padding.left+", "+padding.top+")").call(yAxis);
</script>
</body>
</html>